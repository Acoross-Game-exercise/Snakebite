// Generated by the acoross-rpc protobuf plugin.
// If you make any local change, they will be lost.
// source: snakebite_message.proto

#include "snakebite_message.pb.h"
#include "snakebite_message.rpc.h"

namespace acoross {
namespace snakebite {
namespace messages {

SC_PushService::Service::Service(::boost::asio::io_service& io_service, ::boost::asio::ip::tcp::socket&& socket)
	: ::acoross::rpc::RpcService(io_service, std::move(socket))
{
  REGISTER_SERVICE(QueryClientPort, ::acoross::snakebite::messages::VoidReply, ::acoross::snakebite::messages::AddressReply)
  REGISTER_SERVICE(UpdateGameObjects, ::acoross::snakebite::messages::UpdateGameObjectsEvent, ::acoross::snakebite::messages::VoidReply)
  REGISTER_SERVICE(ResetPlayer, ::acoross::snakebite::messages::VoidReply, ::acoross::snakebite::messages::VoidReply)
  REGISTER_SERVICE(NotifyPlayerPosition, ::acoross::snakebite::messages::PlayerPosition, ::acoross::snakebite::messages::VoidReply)
}

SC_PushService::Stub::Stub(::boost::asio::io_service& io_service, ::boost::asio::ip::tcp::socket&& socket)
	: ::acoross::rpc::RpcStub(io_service, std::move(socket))
{}


SnakebiteService::Service::Service(::boost::asio::io_service& io_service, ::boost::asio::ip::tcp::socket&& socket)
	: ::acoross::rpc::RpcService(io_service, std::move(socket))
{
  REGISTER_SERVICE(RequestZoneInfo, ::acoross::snakebite::messages::VoidReply, ::acoross::snakebite::messages::ZoneInfoReply)
  REGISTER_SERVICE(InitPlayer, ::acoross::snakebite::messages::InitPlayerSnakeRequest, ::acoross::snakebite::messages::InitPlayerSnakeReply)
  REGISTER_SERVICE(SetKeyDown, ::acoross::snakebite::messages::TurnKeyDownRequest, ::acoross::snakebite::messages::VoidReply)
  REGISTER_SERVICE(SetKeyUp, ::acoross::snakebite::messages::TurnKeyUpRequest, ::acoross::snakebite::messages::VoidReply)
}

SnakebiteService::Stub::Stub(::boost::asio::io_service& io_service, ::boost::asio::ip::tcp::socket&& socket)
	: ::acoross::rpc::RpcStub(io_service, std::move(socket))
{}


}  // namespace acoross
}  // namespace snakebite
}  // namespace messages

